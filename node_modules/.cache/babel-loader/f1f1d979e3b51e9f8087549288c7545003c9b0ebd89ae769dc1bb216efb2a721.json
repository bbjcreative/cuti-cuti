{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\cuti-cuti\\\\src\\\\components\\\\CalendarView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CalendarView({\n  holidays,\n  holidayType,\n  selectedState\n}) {\n  _s();\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n\n  // Function to get the number of days in a month\n  const daysInMonth = (month, year) => new Date(year, month + 1, 0).getDate();\n\n  // Function to get the first day of the month (0 = Sunday, 6 = Saturday)\n  const firstDayOfMonth = (month, year) => new Date(year, month, 1).getDay();\n\n  // Generate days for the current month view\n  const generateCalendarDays = () => {\n    const numDays = daysInMonth(currentMonth, currentYear);\n    const firstDay = firstDayOfMonth(currentMonth, currentYear);\n    const days = [];\n\n    // Fill leading empty days (placeholders for previous month's days)\n    for (let i = 0; i < firstDay; i++) {\n      days.push({\n        date: null,\n        isPlaceholder: true\n      });\n    }\n\n    // Fill current month's days\n    for (let i = 1; i <= numDays; i++) {\n      days.push({\n        date: new Date(currentYear, currentMonth, i),\n        isPlaceholder: false\n      });\n    }\n    return days;\n  };\n  const getHolidayDetailsForDate = date => {\n    const matchingHolidays = [];\n    const targetDate = date.toDateString();\n    if (holidayType === 'public') {\n      holidays.forEach(holiday => {\n        const holidayDate = new Date(holiday.date.replace(/\\(.*\\)/, '').trim()).toDateString(); // Clean date string\n        if (holidayDate === targetDate) {\n          matchingHolidays.push({\n            name: holiday.holiday,\n            type: 'public',\n            states: holiday.states\n          });\n        }\n      });\n    } else if (holidayType === 'school') {\n      holidays.forEach(holiday => {\n        const startDate = new Date(holiday.starts.replace(/\\(.*\\)/, '').trim());\n        const endDate = holiday.finishes ? new Date(holiday.finishes.replace(/\\(.*\\)/, '').trim()) : startDate;\n\n        // Check if the date falls within the holiday period (inclusive)\n        if (date >= startDate && date <= endDate) {\n          matchingHolidays.push({\n            name: holiday.type,\n            type: 'school',\n            states: holiday.states\n          });\n        }\n      });\n    }\n    return matchingHolidays;\n  };\n  const goToPreviousMonth = () => {\n    setCurrentMonth(prev => prev === 0 ? 11 : prev - 1);\n    if (currentMonth === 0) {\n      setCurrentYear(prev => prev - 1);\n    }\n  };\n  const goToNextMonth = () => {\n    setCurrentMonth(prev => prev === 11 ? 0 : prev + 1);\n    if (currentMonth === 11) {\n      setCurrentYear(prev => prev + 1);\n    }\n  };\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]; // For calendar header\n\n  const calendarDays = generateCalendarDays();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-xl\",\n    role: \"application\",\n    \"aria-label\": \"Holiday Calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      role: \"navigation\",\n      \"aria-label\": \"Month navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPreviousMonth,\n        className: \"p-2 rounded-md bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-600\",\n        \"aria-label\": \"Previous month\",\n        children: \"< Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-900 dark:text-gray-100\",\n        \"aria-live\": \"polite\",\n        children: [monthNames[currentMonth], \" \", currentYear]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextMonth,\n        className: \"p-2 rounded-md bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-600\",\n        \"aria-label\": \"Next month\",\n        children: \"Next >\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-1 text-center font-bold text-sm mb-2\",\n      role: \"rowgroup\",\n      children: dayNames.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-700 dark:text-gray-300 p-2 border-b border-gray-200 dark:border-gray-700\",\n        role: \"columnheader\",\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-1\",\n      role: \"grid\",\n      \"aria-readonly\": \"true\",\n      children: calendarDays.map((day, index) => {\n        if (day.isPlaceholder) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-gray-100 dark:bg-gray-700 rounded\",\n            role: \"gridcell\",\n            \"aria-hidden\": \"true\"\n          }, `placeholder-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 32\n          }, this);\n        }\n        const today = new Date();\n        const isToday = day.date.toDateString() === today.toDateString();\n        const holidaysOnThisDay = getHolidayDetailsForDate(day.date);\n        let dayClasses = \"p-2 rounded text-gray-900 dark:text-gray-100 flex flex-col items-center justify-center h-20 relative overflow-hidden\"; // Added relative and overflow-hidden\n        let holidayIndicatorClasses = \"\";\n        let tooltipContent = \"\";\n        if (isToday) {\n          dayClasses += \" border-2 border-purple-500 dark:border-purple-400\";\n        }\n        if (holidaysOnThisDay.length > 0) {\n          const isPublicHoliday = holidaysOnThisDay.some(h => h.type === 'public');\n          const isSchoolHoliday = holidaysOnThisDay.some(h => h.type === 'school');\n          if (isPublicHoliday && isSchoolHoliday) {\n            holidayIndicatorClasses = \"bg-gradient-to-br from-blue-500 to-green-500 text-white\";\n          } else if (isPublicHoliday) {\n            holidayIndicatorClasses = \"bg-blue-500 text-white\"; // Blue for public holidays\n          } else if (isSchoolHoliday) {\n            holidayIndicatorClasses = \"bg-green-500 text-white\"; // Green for school holidays\n          }\n          dayClasses += ` ${holidayIndicatorClasses} shadow-md`;\n\n          // Generate tooltip content\n          tooltipContent = holidaysOnThisDay.map(h => `${h.name} (${h.type === 'public' ? 'Public' : 'School'})`).join('\\n');\n        } else {\n          dayClasses += \" bg-gray-50 dark:bg-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600\";\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dayClasses,\n          role: \"gridcell\",\n          \"aria-label\": `${day.date.toDateString()}. ${holidaysOnThisDay.length > 0 ? 'Holidays: ' + holidaysOnThisDay.map(h => h.name).join(', ') : 'No holidays.'}`,\n          title: tooltipContent // Tooltip on hover\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold text-lg\",\n            children: day.date.getDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this), holidaysOnThisDay.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs mt-1 text-center break-words leading-tight max-h-8 overflow-hidden\",\n            children: [\" \", holidaysOnThisDay.map((h, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"block leading-tight\",\n              \"aria-hidden\": \"true\",\n              children: h.name\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this)]\n        }, day.date.toISOString(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 flex flex-wrap justify-center gap-4 text-sm\",\n      role: \"group\",\n      \"aria-label\": \"Holiday type legend\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inline-block w-4 h-4 bg-blue-500 rounded-full mr-2\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-700 dark:text-gray-300\",\n          children: \"Public Holiday\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inline-block w-4 h-4 bg-green-500 rounded-full mr-2\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-700 dark:text-gray-300\",\n          children: \"School Holiday\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inline-block w-4 h-4 bg-gradient-to-br from-blue-500 to-green-500 rounded-full mr-2\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-700 dark:text-gray-300\",\n          children: \"Both\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inline-block w-4 h-4 border-2 border-purple-500 rounded-full mr-2\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-700 dark:text-gray-300\",\n          children: \"Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(CalendarView, \"+0Zw0qQhhbu2kT+T2qqxmAT6Tqs=\");\n_c = CalendarView;\nexport default CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CalendarView","holidays","holidayType","selectedState","_s","currentMonth","setCurrentMonth","Date","getMonth","currentYear","setCurrentYear","getFullYear","daysInMonth","month","year","getDate","firstDayOfMonth","getDay","generateCalendarDays","numDays","firstDay","days","i","push","date","isPlaceholder","getHolidayDetailsForDate","matchingHolidays","targetDate","toDateString","forEach","holiday","holidayDate","replace","trim","name","type","states","startDate","starts","endDate","finishes","goToPreviousMonth","prev","goToNextMonth","monthNames","dayNames","calendarDays","className","role","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","day","index","today","isToday","holidaysOnThisDay","dayClasses","holidayIndicatorClasses","tooltipContent","length","isPublicHoliday","some","h","isSchoolHoliday","join","title","toISOString","_c","$RefreshReg$"],"sources":["C:/wamp64/www/cuti-cuti/src/components/CalendarView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction CalendarView({ holidays, holidayType, selectedState }) {\r\n    const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\r\n    const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\r\n\r\n    // Function to get the number of days in a month\r\n    const daysInMonth = (month, year) => new Date(year, month + 1, 0).getDate();\r\n\r\n    // Function to get the first day of the month (0 = Sunday, 6 = Saturday)\r\n    const firstDayOfMonth = (month, year) => new Date(year, month, 1).getDay();\r\n\r\n    // Generate days for the current month view\r\n    const generateCalendarDays = () => {\r\n        const numDays = daysInMonth(currentMonth, currentYear);\r\n        const firstDay = firstDayOfMonth(currentMonth, currentYear);\r\n        const days = [];\r\n\r\n        // Fill leading empty days (placeholders for previous month's days)\r\n        for (let i = 0; i < firstDay; i++) {\r\n            days.push({ date: null, isPlaceholder: true });\r\n        }\r\n\r\n        // Fill current month's days\r\n        for (let i = 1; i <= numDays; i++) {\r\n            days.push({ date: new Date(currentYear, currentMonth, i), isPlaceholder: false });\r\n        }\r\n\r\n        return days;\r\n    };\r\n\r\n    const getHolidayDetailsForDate = (date) => {\r\n        const matchingHolidays = [];\r\n        const targetDate = date.toDateString();\r\n\r\n        if (holidayType === 'public') {\r\n            holidays.forEach(holiday => {\r\n                const holidayDate = new Date(holiday.date.replace(/\\(.*\\)/, '').trim()).toDateString(); // Clean date string\r\n                if (holidayDate === targetDate) {\r\n                    matchingHolidays.push({ name: holiday.holiday, type: 'public', states: holiday.states });\r\n                }\r\n            });\r\n        } else if (holidayType === 'school') {\r\n            holidays.forEach(holiday => {\r\n                const startDate = new Date(holiday.starts.replace(/\\(.*\\)/, '').trim());\r\n                const endDate = holiday.finishes ? new Date(holiday.finishes.replace(/\\(.*\\)/, '').trim()) : startDate;\r\n\r\n                // Check if the date falls within the holiday period (inclusive)\r\n                if (date >= startDate && date <= endDate) {\r\n                    matchingHolidays.push({ name: holiday.type, type: 'school', states: holiday.states });\r\n                }\r\n            });\r\n        }\r\n        return matchingHolidays;\r\n    };\r\n\r\n\r\n    const goToPreviousMonth = () => {\r\n        setCurrentMonth(prev => (prev === 0 ? 11 : prev - 1));\r\n        if (currentMonth === 0) {\r\n            setCurrentYear(prev => prev - 1);\r\n        }\r\n    };\r\n\r\n    const goToNextMonth = () => {\r\n        setCurrentMonth(prev => (prev === 11 ? 0 : prev + 1));\r\n        if (currentMonth === 11) {\r\n            setCurrentYear(prev => prev + 1);\r\n        }\r\n    };\r\n\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]; // For calendar header\r\n\r\n    const calendarDays = generateCalendarDays();\r\n\r\n    return (\r\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-xl\" role=\"application\" aria-label=\"Holiday Calendar\">\r\n            <div className=\"flex justify-between items-center mb-4\" role=\"navigation\" aria-label=\"Month navigation\">\r\n                <button\r\n                    onClick={goToPreviousMonth}\r\n                    className=\"p-2 rounded-md bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-600\"\r\n                    aria-label=\"Previous month\"\r\n                >\r\n                    &lt; Prev\r\n                </button>\r\n                <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\" aria-live=\"polite\">\r\n                    {monthNames[currentMonth]} {currentYear}\r\n                </h3>\r\n                <button\r\n                    onClick={goToNextMonth}\r\n                    className=\"p-2 rounded-md bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-600\"\r\n                    aria-label=\"Next month\"\r\n                >\r\n                    Next &gt;\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-7 gap-1 text-center font-bold text-sm mb-2\" role=\"rowgroup\">\r\n                {dayNames.map(day => (\r\n                    <div key={day} className=\"text-gray-700 dark:text-gray-300 p-2 border-b border-gray-200 dark:border-gray-700\" role=\"columnheader\">{day}</div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-7 gap-1\" role=\"grid\" aria-readonly=\"true\">\r\n                {calendarDays.map((day, index) => {\r\n                    if (day.isPlaceholder) {\r\n                        return <div key={`placeholder-${index}`} className=\"p-2 bg-gray-100 dark:bg-gray-700 rounded\" role=\"gridcell\" aria-hidden=\"true\"></div>;\r\n                    }\r\n\r\n                    const today = new Date();\r\n                    const isToday = day.date.toDateString() === today.toDateString();\r\n                    const holidaysOnThisDay = getHolidayDetailsForDate(day.date);\r\n\r\n                    let dayClasses = \"p-2 rounded text-gray-900 dark:text-gray-100 flex flex-col items-center justify-center h-20 relative overflow-hidden\"; // Added relative and overflow-hidden\r\n                    let holidayIndicatorClasses = \"\";\r\n                    let tooltipContent = \"\";\r\n\r\n                    if (isToday) {\r\n                        dayClasses += \" border-2 border-purple-500 dark:border-purple-400\";\r\n                    }\r\n\r\n                    if (holidaysOnThisDay.length > 0) {\r\n                        const isPublicHoliday = holidaysOnThisDay.some(h => h.type === 'public');\r\n                        const isSchoolHoliday = holidaysOnThisDay.some(h => h.type === 'school');\r\n\r\n                        if (isPublicHoliday && isSchoolHoliday) {\r\n                            holidayIndicatorClasses = \"bg-gradient-to-br from-blue-500 to-green-500 text-white\";\r\n                        } else if (isPublicHoliday) {\r\n                            holidayIndicatorClasses = \"bg-blue-500 text-white\"; // Blue for public holidays\r\n                        } else if (isSchoolHoliday) {\r\n                            holidayIndicatorClasses = \"bg-green-500 text-white\"; // Green for school holidays\r\n                        }\r\n                        dayClasses += ` ${holidayIndicatorClasses} shadow-md`;\r\n\r\n                        // Generate tooltip content\r\n                        tooltipContent = holidaysOnThisDay.map(h => `${h.name} (${h.type === 'public' ? 'Public' : 'School'})`).join('\\n');\r\n                    } else {\r\n                        dayClasses += \" bg-gray-50 dark:bg-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600\";\r\n                    }\r\n\r\n                    return (\r\n                        <div\r\n                            key={day.date.toISOString()}\r\n                            className={dayClasses}\r\n                            role=\"gridcell\"\r\n                            aria-label={`${day.date.toDateString()}. ${holidaysOnThisDay.length > 0 ? 'Holidays: ' + holidaysOnThisDay.map(h => h.name).join(', ') : 'No holidays.'}`}\r\n                            title={tooltipContent} // Tooltip on hover\r\n                        >\r\n                            <span className=\"font-bold text-lg\">{day.date.getDate()}</span>\r\n                            {holidaysOnThisDay.length > 0 && (\r\n                                <div className=\"text-xs mt-1 text-center break-words leading-tight max-h-8 overflow-hidden\"> {/* Adjusted max-h */}\r\n                                    {holidaysOnThisDay.map((h, i) => (\r\n                                        <span key={i} className=\"block leading-tight\" aria-hidden=\"true\">\r\n                                            {h.name}\r\n                                        </span>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            {/* Legend for colors */}\r\n            <div className=\"mt-6 flex flex-wrap justify-center gap-4 text-sm\" role=\"group\" aria-label=\"Holiday type legend\">\r\n                <div className=\"flex items-center\">\r\n                    <span className=\"inline-block w-4 h-4 bg-blue-500 rounded-full mr-2\" aria-hidden=\"true\"></span>\r\n                    <span className=\"text-gray-700 dark:text-gray-300\">Public Holiday</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                    <span className=\"inline-block w-4 h-4 bg-green-500 rounded-full mr-2\" aria-hidden=\"true\"></span>\r\n                    <span className=\"text-gray-700 dark:text-gray-300\">School Holiday</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                    <span className=\"inline-block w-4 h-4 bg-gradient-to-br from-blue-500 to-green-500 rounded-full mr-2\" aria-hidden=\"true\"></span>\r\n                    <span className=\"text-gray-700 dark:text-gray-300\">Both</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                    <span className=\"inline-block w-4 h-4 border-2 border-purple-500 rounded-full mr-2\" aria-hidden=\"true\"></span>\r\n                    <span className=\"text-gray-700 dark:text-gray-300\">Today</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalendarView;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,YAAYA,CAAC;EAAEC,QAAQ;EAAEC,WAAW;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAC5D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAIW,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC;EACvE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAIW,IAAI,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC,CAAC;;EAExE;EACA,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK,IAAIP,IAAI,CAACO,IAAI,EAAED,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC;;EAE3E;EACA,MAAMC,eAAe,GAAGA,CAACH,KAAK,EAAEC,IAAI,KAAK,IAAIP,IAAI,CAACO,IAAI,EAAED,KAAK,EAAE,CAAC,CAAC,CAACI,MAAM,CAAC,CAAC;;EAE1E;EACA,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,OAAO,GAAGP,WAAW,CAACP,YAAY,EAAEI,WAAW,CAAC;IACtD,MAAMW,QAAQ,GAAGJ,eAAe,CAACX,YAAY,EAAEI,WAAW,CAAC;IAC3D,MAAMY,IAAI,GAAG,EAAE;;IAEf;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,QAAQ,EAAEE,CAAC,EAAE,EAAE;MAC/BD,IAAI,CAACE,IAAI,CAAC;QAAEC,IAAI,EAAE,IAAI;QAAEC,aAAa,EAAE;MAAK,CAAC,CAAC;IAClD;;IAEA;IACA,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIH,OAAO,EAAEG,CAAC,EAAE,EAAE;MAC/BD,IAAI,CAACE,IAAI,CAAC;QAAEC,IAAI,EAAE,IAAIjB,IAAI,CAACE,WAAW,EAAEJ,YAAY,EAAEiB,CAAC,CAAC;QAAEG,aAAa,EAAE;MAAM,CAAC,CAAC;IACrF;IAEA,OAAOJ,IAAI;EACf,CAAC;EAED,MAAMK,wBAAwB,GAAIF,IAAI,IAAK;IACvC,MAAMG,gBAAgB,GAAG,EAAE;IAC3B,MAAMC,UAAU,GAAGJ,IAAI,CAACK,YAAY,CAAC,CAAC;IAEtC,IAAI3B,WAAW,KAAK,QAAQ,EAAE;MAC1BD,QAAQ,CAAC6B,OAAO,CAACC,OAAO,IAAI;QACxB,MAAMC,WAAW,GAAG,IAAIzB,IAAI,CAACwB,OAAO,CAACP,IAAI,CAACS,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACL,YAAY,CAAC,CAAC,CAAC,CAAC;QACxF,IAAIG,WAAW,KAAKJ,UAAU,EAAE;UAC5BD,gBAAgB,CAACJ,IAAI,CAAC;YAAEY,IAAI,EAAEJ,OAAO,CAACA,OAAO;YAAEK,IAAI,EAAE,QAAQ;YAAEC,MAAM,EAAEN,OAAO,CAACM;UAAO,CAAC,CAAC;QAC5F;MACJ,CAAC,CAAC;IACN,CAAC,MAAM,IAAInC,WAAW,KAAK,QAAQ,EAAE;MACjCD,QAAQ,CAAC6B,OAAO,CAACC,OAAO,IAAI;QACxB,MAAMO,SAAS,GAAG,IAAI/B,IAAI,CAACwB,OAAO,CAACQ,MAAM,CAACN,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;QACvE,MAAMM,OAAO,GAAGT,OAAO,CAACU,QAAQ,GAAG,IAAIlC,IAAI,CAACwB,OAAO,CAACU,QAAQ,CAACR,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,GAAGI,SAAS;;QAEtG;QACA,IAAId,IAAI,IAAIc,SAAS,IAAId,IAAI,IAAIgB,OAAO,EAAE;UACtCb,gBAAgB,CAACJ,IAAI,CAAC;YAAEY,IAAI,EAAEJ,OAAO,CAACK,IAAI;YAAEA,IAAI,EAAE,QAAQ;YAAEC,MAAM,EAAEN,OAAO,CAACM;UAAO,CAAC,CAAC;QACzF;MACJ,CAAC,CAAC;IACN;IACA,OAAOV,gBAAgB;EAC3B,CAAC;EAGD,MAAMe,iBAAiB,GAAGA,CAAA,KAAM;IAC5BpC,eAAe,CAACqC,IAAI,IAAKA,IAAI,KAAK,CAAC,GAAG,EAAE,GAAGA,IAAI,GAAG,CAAE,CAAC;IACrD,IAAItC,YAAY,KAAK,CAAC,EAAE;MACpBK,cAAc,CAACiC,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IACpC;EACJ,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxBtC,eAAe,CAACqC,IAAI,IAAKA,IAAI,KAAK,EAAE,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAE,CAAC;IACrD,IAAItC,YAAY,KAAK,EAAE,EAAE;MACrBK,cAAc,CAACiC,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IACpC;EACJ,CAAC;EAED,MAAME,UAAU,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;EAC7I,MAAMC,QAAQ,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;;EAEpE,MAAMC,YAAY,GAAG7B,oBAAoB,CAAC,CAAC;EAE3C,oBACInB,OAAA;IAAKiD,SAAS,EAAC,oDAAoD;IAACC,IAAI,EAAC,aAAa;IAAC,cAAW,kBAAkB;IAAAC,QAAA,gBAChHnD,OAAA;MAAKiD,SAAS,EAAC,wCAAwC;MAACC,IAAI,EAAC,YAAY;MAAC,cAAW,kBAAkB;MAAAC,QAAA,gBACnGnD,OAAA;QACIoD,OAAO,EAAET,iBAAkB;QAC3BM,SAAS,EAAC,uHAAuH;QACjI,cAAW,gBAAgB;QAAAE,QAAA,EAC9B;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTxD,OAAA;QAAIiD,SAAS,EAAC,wDAAwD;QAAC,aAAU,QAAQ;QAAAE,QAAA,GACpFL,UAAU,CAACxC,YAAY,CAAC,EAAC,GAAC,EAACI,WAAW;MAAA;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACLxD,OAAA;QACIoD,OAAO,EAAEP,aAAc;QACvBI,SAAS,EAAC,uHAAuH;QACjI,cAAW,YAAY;QAAAE,QAAA,EAC1B;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAENxD,OAAA;MAAKiD,SAAS,EAAC,2DAA2D;MAACC,IAAI,EAAC,UAAU;MAAAC,QAAA,EACrFJ,QAAQ,CAACU,GAAG,CAACC,GAAG,iBACb1D,OAAA;QAAeiD,SAAS,EAAC,oFAAoF;QAACC,IAAI,EAAC,cAAc;QAAAC,QAAA,EAAEO;MAAG,GAA5HA,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+H,CAC/I;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAENxD,OAAA;MAAKiD,SAAS,EAAC,wBAAwB;MAACC,IAAI,EAAC,MAAM;MAAC,iBAAc,MAAM;MAAAC,QAAA,EACnEH,YAAY,CAACS,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;QAC9B,IAAID,GAAG,CAAChC,aAAa,EAAE;UACnB,oBAAO1B,OAAA;YAAkCiD,SAAS,EAAC,0CAA0C;YAACC,IAAI,EAAC,UAAU;YAAC,eAAY;UAAM,GAA/G,eAAeS,KAAK,EAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA+F,CAAC;QAC3I;QAEA,MAAMI,KAAK,GAAG,IAAIpD,IAAI,CAAC,CAAC;QACxB,MAAMqD,OAAO,GAAGH,GAAG,CAACjC,IAAI,CAACK,YAAY,CAAC,CAAC,KAAK8B,KAAK,CAAC9B,YAAY,CAAC,CAAC;QAChE,MAAMgC,iBAAiB,GAAGnC,wBAAwB,CAAC+B,GAAG,CAACjC,IAAI,CAAC;QAE5D,IAAIsC,UAAU,GAAG,sHAAsH,CAAC,CAAC;QACzI,IAAIC,uBAAuB,GAAG,EAAE;QAChC,IAAIC,cAAc,GAAG,EAAE;QAEvB,IAAIJ,OAAO,EAAE;UACTE,UAAU,IAAI,oDAAoD;QACtE;QAEA,IAAID,iBAAiB,CAACI,MAAM,GAAG,CAAC,EAAE;UAC9B,MAAMC,eAAe,GAAGL,iBAAiB,CAACM,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChC,IAAI,KAAK,QAAQ,CAAC;UACxE,MAAMiC,eAAe,GAAGR,iBAAiB,CAACM,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChC,IAAI,KAAK,QAAQ,CAAC;UAExE,IAAI8B,eAAe,IAAIG,eAAe,EAAE;YACpCN,uBAAuB,GAAG,yDAAyD;UACvF,CAAC,MAAM,IAAIG,eAAe,EAAE;YACxBH,uBAAuB,GAAG,wBAAwB,CAAC,CAAC;UACxD,CAAC,MAAM,IAAIM,eAAe,EAAE;YACxBN,uBAAuB,GAAG,yBAAyB,CAAC,CAAC;UACzD;UACAD,UAAU,IAAI,IAAIC,uBAAuB,YAAY;;UAErD;UACAC,cAAc,GAAGH,iBAAiB,CAACL,GAAG,CAACY,CAAC,IAAI,GAAGA,CAAC,CAACjC,IAAI,KAAKiC,CAAC,CAAChC,IAAI,KAAK,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,CAAC,CAACkC,IAAI,CAAC,IAAI,CAAC;QACtH,CAAC,MAAM;UACHR,UAAU,IAAI,uEAAuE;QACzF;QAEA,oBACI/D,OAAA;UAEIiD,SAAS,EAAEc,UAAW;UACtBb,IAAI,EAAC,UAAU;UACf,cAAY,GAAGQ,GAAG,CAACjC,IAAI,CAACK,YAAY,CAAC,CAAC,KAAKgC,iBAAiB,CAACI,MAAM,GAAG,CAAC,GAAG,YAAY,GAAGJ,iBAAiB,CAACL,GAAG,CAACY,CAAC,IAAIA,CAAC,CAACjC,IAAI,CAAC,CAACmC,IAAI,CAAC,IAAI,CAAC,GAAG,cAAc,EAAG;UAC1JC,KAAK,EAAEP,cAAe,CAAC;UAAA;UAAAd,QAAA,gBAEvBnD,OAAA;YAAMiD,SAAS,EAAC,mBAAmB;YAAAE,QAAA,EAAEO,GAAG,CAACjC,IAAI,CAACT,OAAO,CAAC;UAAC;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EAC9DM,iBAAiB,CAACI,MAAM,GAAG,CAAC,iBACzBlE,OAAA;YAAKiD,SAAS,EAAC,4EAA4E;YAAAE,QAAA,GAAC,GAAC,EACxFW,iBAAiB,CAACL,GAAG,CAAC,CAACY,CAAC,EAAE9C,CAAC,kBACxBvB,OAAA;cAAciD,SAAS,EAAC,qBAAqB;cAAC,eAAY,MAAM;cAAAE,QAAA,EAC3DkB,CAAC,CAACjC;YAAI,GADAb,CAAC;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEN,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CACR;QAAA,GAfIE,GAAG,CAACjC,IAAI,CAACgD,WAAW,CAAC,CAAC;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgB1B,CAAC;MAEd,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAENxD,OAAA;MAAKiD,SAAS,EAAC,kDAAkD;MAACC,IAAI,EAAC,OAAO;MAAC,cAAW,qBAAqB;MAAAC,QAAA,gBAC3GnD,OAAA;QAAKiD,SAAS,EAAC,mBAAmB;QAAAE,QAAA,gBAC9BnD,OAAA;UAAMiD,SAAS,EAAC,oDAAoD;UAAC,eAAY;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/FxD,OAAA;UAAMiD,SAAS,EAAC,kCAAkC;UAAAE,QAAA,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC,eACNxD,OAAA;QAAKiD,SAAS,EAAC,mBAAmB;QAAAE,QAAA,gBAC9BnD,OAAA;UAAMiD,SAAS,EAAC,qDAAqD;UAAC,eAAY;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChGxD,OAAA;UAAMiD,SAAS,EAAC,kCAAkC;UAAAE,QAAA,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC,eACNxD,OAAA;QAAKiD,SAAS,EAAC,mBAAmB;QAAAE,QAAA,gBAC9BnD,OAAA;UAAMiD,SAAS,EAAC,qFAAqF;UAAC,eAAY;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChIxD,OAAA;UAAMiD,SAAS,EAAC,kCAAkC;UAAAE,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC,eACNxD,OAAA;QAAKiD,SAAS,EAAC,mBAAmB;QAAAE,QAAA,gBAC9BnD,OAAA;UAAMiD,SAAS,EAAC,mEAAmE;UAAC,eAAY;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9GxD,OAAA;UAAMiD,SAAS,EAAC,kCAAkC;UAAAE,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACnD,EAAA,CAtLQJ,YAAY;AAAAyE,EAAA,GAAZzE,YAAY;AAwLrB,eAAeA,YAAY;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}