{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\cuti-cuti\\\\src\\\\components\\\\CalendarView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CalendarView({\n  holidays,\n  holidayType,\n  selectedState\n}) {\n  _s();\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const [showModal, setShowModal] = useState(false);\n  const [modalHolidays, setModalHolidays] = useState([]);\n  const [modalDate, setModalDate] = useState(null);\n\n  // Function to get the number of days in a month\n  const daysInMonth = (month, year) => new Date(year, month + 1, 0).getDate();\n\n  // Function to get the first day of the month (0 = Sunday, 6 = Saturday)\n  const firstDayOfMonth = (month, year) => new Date(year, month, 1).getDay();\n\n  // Generate days for the current month view\n  const generateCalendarDays = () => {\n    const numDays = daysInMonth(currentMonth, currentYear);\n    const firstDay = firstDayOfMonth(currentMonth, currentYear);\n    const days = [];\n\n    // Fill leading empty days (placeholders for previous month's days)\n    for (let i = 0; i < firstDay; i++) {\n      days.push({\n        date: null,\n        isPlaceholder: true\n      });\n    }\n\n    // Fill current month's days\n    for (let i = 1; i <= numDays; i++) {\n      days.push({\n        date: new Date(currentYear, currentMonth, i),\n        isPlaceholder: false\n      });\n    }\n    return days;\n  };\n  const getHolidayDetailsForDate = date => {\n    const matchingHolidays = [];\n    const targetDate = date.toDateString();\n\n    // Check public holidays\n    holidays.filter(h => h.holiday).forEach(holiday => {\n      // Filter to ensure it's a public holiday structure\n      const holidayDate = new Date(holiday.date.replace(/\\(.*\\)/, '').trim()).toDateString(); // Clean date string\n      if (holidayDate === targetDate) {\n        matchingHolidays.push({\n          name: holiday.holiday,\n          type: 'public',\n          states: holiday.states\n        });\n      }\n    });\n\n    // Check school holidays\n    holidays.filter(h => h.type && h.starts).forEach(holiday => {\n      // Filter to ensure it's a school holiday structure\n      const startDate = new Date(holiday.starts.replace(/\\(.*\\)/, '').trim());\n      const endDate = holiday.finishes ? new Date(holiday.finishes.replace(/\\(.*\\)/, '').trim()) : startDate;\n      if (date >= startDate && date <= endDate) {\n        // Prevent duplicate entries if a public holiday is also a school holiday, or if school holiday spans multiple days\n        const exists = matchingHolidays.some(mh => mh.name === holiday.type && mh.type === 'school');\n        if (!exists) {\n          matchingHolidays.push({\n            name: holiday.type,\n            type: 'school',\n            states: holiday.states\n          });\n        }\n      }\n    });\n    return matchingHolidays;\n  };\n  const goToPreviousMonth = () => {\n    setCurrentMonth(prev => prev === 0 ? 11 : prev - 1);\n    if (currentMonth === 0) {\n      setCurrentYear(prev => prev - 1);\n    }\n  };\n  const goToNextMonth = () => {\n    setCurrentMonth(prev => prev === 11 ? 0 : prev + 1);\n    if (currentMonth === 11) {\n      setCurrentYear(prev => prev + 1);\n    }\n  };\n  const handleDateClick = date => {\n    const holidaysOnThisDay = getHolidayDetailsForDate(date);\n    if (holidaysOnThisDay.length > 0) {\n      setModalHolidays(holidaysOnThisDay);\n      setModalDate(date);\n      setShowModal(true);\n    }\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    setModalHolidays([]);\n    setModalDate(null);\n  };\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const dayNames = [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"]; // Shortened day names\n\n  const calendarDays = generateCalendarDays();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-xl\",\n    role: \"application\",\n    \"aria-label\": \"Holiday Calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      role: \"navigation\",\n      \"aria-label\": \"Month navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPreviousMonth,\n        className: \"p-2 rounded-md bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-600\",\n        \"aria-label\": \"Previous month\",\n        children: \"< Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-900 dark:text-gray-100\",\n        \"aria-live\": \"polite\",\n        children: [monthNames[currentMonth], \" \", currentYear]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextMonth,\n        className: \"p-2 rounded-md bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-600\",\n        \"aria-label\": \"Next month\",\n        children: \"Next >\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-1 text-center font-bold text-sm mb-2\",\n      role: \"rowgroup\",\n      children: dayNames.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-700 dark:text-gray-300 p-2 border-b border-gray-200 dark:border-gray-700\",\n        role: \"columnheader\",\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-1\",\n      children: calendarDays.map((day, index) => {\n        if (day.isPlaceholder) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-gray-100 dark:bg-gray-700 rounded aspect-square\"\n          }, `placeholder-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 32\n          }, this);\n        }\n        const today = new Date();\n        const isToday = day.date.toDateString() === today.toDateString();\n        const holidaysOnThisDay = getHolidayDetailsForDate(day.date);\n\n        // Replaced fixed heights with aspect-square\n        let dayClasses = \"p-2 rounded text-gray-900 dark:text-gray-100 flex flex-col items-center justify-center relative aspect-square\";\n\n        // Add cursor-pointer only if there are holidays to click\n        if (holidaysOnThisDay.length > 0) {\n          dayClasses += \" cursor-pointer\";\n        } else {\n          dayClasses += \" bg-gray-50 dark:bg-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600\";\n        }\n        if (isToday) {\n          dayClasses += \" border-2 border-purple-500 dark:border-purple-400\";\n        }\n\n        // Determine holiday types present for cell background\n        const publicHolidaysOnDay = holidaysOnThisDay.filter(h => h.type === 'public');\n        const schoolHolidaysOnDay = holidaysOnThisDay.filter(h => h.type === 'school');\n        let holidayCellBgClass = \"\"; // For the main cell background color\n\n        // Check for combinations first (highest priority for gradients)\n        if (publicHolidaysOnDay.length > 0 && schoolHolidaysOnDay.length > 0) {\n          // Case 1: Both Public (any type) AND School Holidays\n          holidayCellBgClass = \"bg-gradient-to-br from-blue-500 to-green-500 text-white\";\n        } else if (publicHolidaysOnDay.length > 0) {\n          // Case 2: Only Public Holidays (National or State or Mixed Public)\n          const hasPureNationalPublic = publicHolidaysOnDay.some(h => h.states === 'National' && !h.states.includes('except'));\n          const hasStatePublic = publicHolidaysOnDay.some(h => h.states !== 'National' && !h.states.includes('except')); // Indicates a pure state holiday\n\n          if (hasPureNationalPublic && !hasStatePublic) {\n            // Pure National Public Holiday for the selected state\n            holidayCellBgClass = \"bg-blue-500 text-white\";\n          } else if (hasStatePublic && !hasPureNationalPublic) {\n            // Pure State Holiday for the selected state\n            holidayCellBgClass = \"bg-orange-500 text-white\";\n          } else {\n            // Mixed Public Holidays (National + State, or National with Exclusion)\n            holidayCellBgClass = \"bg-gradient-to-br from-blue-500 to-orange-500 text-white\";\n          }\n        } else if (schoolHolidaysOnDay.length > 0) {\n          // Case 3: Only School Holidays\n          holidayCellBgClass = \"bg-green-500 text-white\";\n        }\n        if (holidayCellBgClass) {\n          dayClasses += ` ${holidayCellBgClass} shadow-md`;\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dayClasses,\n          role: \"gridcell\",\n          \"aria-label\": `${day.date.toDateString()}. ${holidaysOnThisDay.length > 0 ? 'Holidays present. Click for details.' : 'No holidays.'}`,\n          onClick: holidaysOnThisDay.length > 0 ? () => handleDateClick(day.date) : undefined,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold text-lg sm:text-xl md:text-2xl\",\n            children: day.date.getDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this)\n        }, day.date.toISOString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 flex flex-wrap justify-center gap-4 text-sm\",\n      role: \"group\",\n      \"aria-label\": \"Holiday type legend\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inline-block w-4 h-4 bg-blue-500 rounded-full mr-2\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-700 dark:text-gray-300\",\n          children: \"National Holiday\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inline-block w-4 h-4 bg-orange-500 rounded-full mr-2\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-700 dark:text-gray-300\",\n          children: \"State Holiday\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inline-block w-4 h-4 bg-green-500 rounded-full mr-2\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-700 dark:text-gray-300\",\n          children: \"School Holiday\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inline-block w-4 h-4 bg-gradient-to-br from-blue-500 to-green-500 rounded-full mr-2\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-700 dark:text-gray-300\",\n          children: \"Mixed Public & School Holidays\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inline-block w-4 h-4 bg-gradient-to-br from-blue-500 to-orange-500 rounded-full mr-2\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-700 dark:text-gray-300\",\n          children: \"Mixed National & State Holidays\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inline-block w-4 h-4 border-2 border-purple-500 rounded-full mr-2\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-700 dark:text-gray-300\",\n          children: \"Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50 p-4\",\n      role: \"dialog\",\n      \"aria-modal\": \"true\",\n      \"aria-labelledby\": \"modal-title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          id: \"modal-title\",\n          className: \"text-xl font-bold text-gray-900 dark:text-gray-100 mb-4\",\n          children: [\"Holidays on \", modalDate === null || modalDate === void 0 ? void 0 : modalDate.toLocaleDateString('en-MY', {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          className: \"absolute top-3 right-3 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\",\n          \"aria-label\": \"Close holiday details\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-6 h-6\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: \"2\",\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 143\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3\",\n          children: modalHolidays.map((holiday, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 rounded-md bg-gray-100 dark:bg-gray-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-semibold text-gray-900 dark:text-gray-100\",\n              children: holiday.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 37\n            }, this), holiday.type === 'school' && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-700 dark:text-gray-300\",\n              children: \"Type: School Holiday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-700 dark:text-gray-300\",\n              children: [\"States: \", holiday.states || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s(CalendarView, \"UhY4lgJa6rn0rSFodtKlSt2xZZQ=\");\n_c = CalendarView;\nexport default CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CalendarView","holidays","holidayType","selectedState","_s","currentMonth","setCurrentMonth","Date","getMonth","currentYear","setCurrentYear","getFullYear","showModal","setShowModal","modalHolidays","setModalHolidays","modalDate","setModalDate","daysInMonth","month","year","getDate","firstDayOfMonth","getDay","generateCalendarDays","numDays","firstDay","days","i","push","date","isPlaceholder","getHolidayDetailsForDate","matchingHolidays","targetDate","toDateString","filter","h","holiday","forEach","holidayDate","replace","trim","name","type","states","starts","startDate","endDate","finishes","exists","some","mh","goToPreviousMonth","prev","goToNextMonth","handleDateClick","holidaysOnThisDay","length","closeModal","monthNames","dayNames","calendarDays","className","role","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","day","index","today","isToday","dayClasses","publicHolidaysOnDay","schoolHolidaysOnDay","holidayCellBgClass","hasPureNationalPublic","includes","hasStatePublic","undefined","toISOString","id","toLocaleDateString","weekday","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","_c","$RefreshReg$"],"sources":["C:/wamp64/www/cuti-cuti/src/components/CalendarView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction CalendarView({ holidays, holidayType, selectedState }) {\r\n    const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\r\n    const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [modalHolidays, setModalHolidays] = useState([]);\r\n    const [modalDate, setModalDate] = useState(null);\r\n\r\n    // Function to get the number of days in a month\r\n    const daysInMonth = (month, year) => new Date(year, month + 1, 0).getDate();\r\n\r\n    // Function to get the first day of the month (0 = Sunday, 6 = Saturday)\r\n    const firstDayOfMonth = (month, year) => new Date(year, month, 1).getDay();\r\n\r\n    // Generate days for the current month view\r\n    const generateCalendarDays = () => {\r\n        const numDays = daysInMonth(currentMonth, currentYear);\r\n        const firstDay = firstDayOfMonth(currentMonth, currentYear);\r\n        const days = [];\r\n\r\n        // Fill leading empty days (placeholders for previous month's days)\r\n        for (let i = 0; i < firstDay; i++) {\r\n            days.push({ date: null, isPlaceholder: true });\r\n        }\r\n\r\n        // Fill current month's days\r\n        for (let i = 1; i <= numDays; i++) {\r\n            days.push({ date: new Date(currentYear, currentMonth, i), isPlaceholder: false });\r\n        }\r\n\r\n        return days;\r\n    };\r\n\r\n    const getHolidayDetailsForDate = (date) => {\r\n        const matchingHolidays = [];\r\n        const targetDate = date.toDateString();\r\n\r\n        // Check public holidays\r\n        holidays.filter(h => h.holiday).forEach(holiday => { // Filter to ensure it's a public holiday structure\r\n            const holidayDate = new Date(holiday.date.replace(/\\(.*\\)/, '').trim()).toDateString(); // Clean date string\r\n            if (holidayDate === targetDate) {\r\n                matchingHolidays.push({ name: holiday.holiday, type: 'public', states: holiday.states });\r\n            }\r\n        });\r\n\r\n        // Check school holidays\r\n        holidays.filter(h => h.type && h.starts).forEach(holiday => { // Filter to ensure it's a school holiday structure\r\n            const startDate = new Date(holiday.starts.replace(/\\(.*\\)/, '').trim());\r\n            const endDate = holiday.finishes ? new Date(holiday.finishes.replace(/\\(.*\\)/, '').trim()) : startDate;\r\n\r\n            if (date >= startDate && date <= endDate) {\r\n                // Prevent duplicate entries if a public holiday is also a school holiday, or if school holiday spans multiple days\r\n                const exists = matchingHolidays.some(mh => mh.name === holiday.type && mh.type === 'school');\r\n                if (!exists) {\r\n                    matchingHolidays.push({ name: holiday.type, type: 'school', states: holiday.states });\r\n                }\r\n            }\r\n        });\r\n        return matchingHolidays;\r\n    };\r\n\r\n\r\n    const goToPreviousMonth = () => {\r\n        setCurrentMonth(prev => (prev === 0 ? 11 : prev - 1));\r\n        if (currentMonth === 0) {\r\n            setCurrentYear(prev => prev - 1);\r\n        }\r\n    };\r\n\r\n    const goToNextMonth = () => {\r\n        setCurrentMonth(prev => (prev === 11 ? 0 : prev + 1));\r\n        if (currentMonth === 11) {\r\n            setCurrentYear(prev => prev + 1);\r\n        }\r\n    };\r\n\r\n    const handleDateClick = (date) => {\r\n        const holidaysOnThisDay = getHolidayDetailsForDate(date);\r\n        if (holidaysOnThisDay.length > 0) {\r\n            setModalHolidays(holidaysOnThisDay);\r\n            setModalDate(date);\r\n            setShowModal(true);\r\n        }\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setShowModal(false);\r\n        setModalHolidays([]);\r\n        setModalDate(null);\r\n    };\r\n\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    const dayNames = [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"]; // Shortened day names\r\n\r\n    const calendarDays = generateCalendarDays();\r\n\r\n    return (\r\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-xl\" role=\"application\" aria-label=\"Holiday Calendar\">\r\n            <div className=\"flex justify-between items-center mb-4\" role=\"navigation\" aria-label=\"Month navigation\">\r\n                <button\r\n                    onClick={goToPreviousMonth}\r\n                    className=\"p-2 rounded-md bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-600\"\r\n                    aria-label=\"Previous month\"\r\n                >\r\n                    &lt; Prev\r\n                </button>\r\n                <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\" aria-live=\"polite\">\r\n                    {monthNames[currentMonth]} {currentYear}\r\n                </h3>\r\n                <button\r\n                    onClick={goToNextMonth}\r\n                    className=\"p-2 rounded-md bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-600\"\r\n                    aria-label=\"Next month\"\r\n                >\r\n                    Next &gt;\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-7 gap-1 text-center font-bold text-sm mb-2\" role=\"rowgroup\">\r\n                {dayNames.map(day => (\r\n                    <div key={day} className=\"text-gray-700 dark:text-gray-300 p-2 border-b border-gray-200 dark:border-gray-700\" role=\"columnheader\">{day}</div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Calendar Grid: Using aspect-square for mobile-friendliness */}\r\n            <div className=\"grid grid-cols-7 gap-1\">\r\n                {calendarDays.map((day, index) => {\r\n                    if (day.isPlaceholder) {\r\n                        return <div key={`placeholder-${index}`} className=\"p-2 bg-gray-100 dark:bg-gray-700 rounded aspect-square\"></div>;\r\n                    }\r\n\r\n                    const today = new Date();\r\n                    const isToday = day.date.toDateString() === today.toDateString();\r\n                    const holidaysOnThisDay = getHolidayDetailsForDate(day.date);\r\n\r\n                    // Replaced fixed heights with aspect-square\r\n                    let dayClasses = \"p-2 rounded text-gray-900 dark:text-gray-100 flex flex-col items-center justify-center relative aspect-square\";\r\n                    \r\n                    // Add cursor-pointer only if there are holidays to click\r\n                    if (holidaysOnThisDay.length > 0) {\r\n                        dayClasses += \" cursor-pointer\";\r\n                    } else {\r\n                        dayClasses += \" bg-gray-50 dark:bg-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600\";\r\n                    }\r\n\r\n                    if (isToday) {\r\n                        dayClasses += \" border-2 border-purple-500 dark:border-purple-400\";\r\n                    }\r\n\r\n                    // Determine holiday types present for cell background\r\n                    const publicHolidaysOnDay = holidaysOnThisDay.filter(h => h.type === 'public');\r\n                    const schoolHolidaysOnDay = holidaysOnThisDay.filter(h => h.type === 'school');\r\n\r\n                    let holidayCellBgClass = \"\"; // For the main cell background color\r\n\r\n                    // Check for combinations first (highest priority for gradients)\r\n                    if (publicHolidaysOnDay.length > 0 && schoolHolidaysOnDay.length > 0) {\r\n                        // Case 1: Both Public (any type) AND School Holidays\r\n                        holidayCellBgClass = \"bg-gradient-to-br from-blue-500 to-green-500 text-white\";\r\n                    } else if (publicHolidaysOnDay.length > 0) {\r\n                        // Case 2: Only Public Holidays (National or State or Mixed Public)\r\n                        const hasPureNationalPublic = publicHolidaysOnDay.some(h => h.states === 'National' && !h.states.includes('except'));\r\n                        const hasStatePublic = publicHolidaysOnDay.some(h => h.states !== 'National' && !h.states.includes('except')); // Indicates a pure state holiday\r\n\r\n                        if (hasPureNationalPublic && !hasStatePublic) {\r\n                            // Pure National Public Holiday for the selected state\r\n                            holidayCellBgClass = \"bg-blue-500 text-white\";\r\n                        } else if (hasStatePublic && !hasPureNationalPublic) {\r\n                            // Pure State Holiday for the selected state\r\n                            holidayCellBgClass = \"bg-orange-500 text-white\";\r\n                        } else {\r\n                            // Mixed Public Holidays (National + State, or National with Exclusion)\r\n                            holidayCellBgClass = \"bg-gradient-to-br from-blue-500 to-orange-500 text-white\";\r\n                        }\r\n                    } else if (schoolHolidaysOnDay.length > 0) {\r\n                        // Case 3: Only School Holidays\r\n                        holidayCellBgClass = \"bg-green-500 text-white\";\r\n                    }\r\n\r\n\r\n                    if (holidayCellBgClass) {\r\n                        dayClasses += ` ${holidayCellBgClass} shadow-md`;\r\n                    }\r\n\r\n                    return (\r\n                        <div\r\n                            key={day.date.toISOString()}\r\n                            className={dayClasses}\r\n                            role=\"gridcell\"\r\n                            aria-label={`${day.date.toDateString()}. ${holidaysOnThisDay.length > 0 ? 'Holidays present. Click for details.' : 'No holidays.'}`}\r\n                            onClick={holidaysOnThisDay.length > 0 ? () => handleDateClick(day.date) : undefined}\r\n                        >\r\n                            {/* Responsive font size for date number */}\r\n                            <span className=\"font-bold text-lg sm:text-xl md:text-2xl\">{day.date.getDate()}</span>\r\n                            {/* No more icons in cells */}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            {/* Legend for colors */}\r\n            <div className=\"mt-6 flex flex-wrap justify-center gap-4 text-sm\" role=\"group\" aria-label=\"Holiday type legend\">\r\n                <div className=\"flex items-center\">\r\n                    <span className=\"inline-block w-4 h-4 bg-blue-500 rounded-full mr-2\" aria-hidden=\"true\"></span>\r\n                    <span className=\"text-gray-700 dark:text-gray-300\">National Holiday</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                    <span className=\"inline-block w-4 h-4 bg-orange-500 rounded-full mr-2\" aria-hidden=\"true\"></span>\r\n                    <span className=\"text-gray-700 dark:text-gray-300\">State Holiday</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                    <span className=\"inline-block w-4 h-4 bg-green-500 rounded-full mr-2\" aria-hidden=\"true\"></span>\r\n                    <span className=\"text-gray-700 dark:text-gray-300\">School Holiday</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                    <span className=\"inline-block w-4 h-4 bg-gradient-to-br from-blue-500 to-green-500 rounded-full mr-2\" aria-hidden=\"true\"></span>\r\n                    <span className=\"text-gray-700 dark:text-gray-300\">Mixed Public & School Holidays</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                    <span className=\"inline-block w-4 h-4 bg-gradient-to-br from-blue-500 to-orange-500 rounded-full mr-2\" aria-hidden=\"true\"></span>\r\n                    <span className=\"text-gray-700 dark:text-gray-300\">Mixed National & State Holidays</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                    <span className=\"inline-block w-4 h-4 border-2 border-purple-500 rounded-full mr-2\" aria-hidden=\"true\"></span>\r\n                    <span className=\"text-gray-700 dark:text-gray-300\">Today</span>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Holiday Details Modal */}\r\n            {showModal && (\r\n                <div className=\"fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50 p-4\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-title\">\r\n                    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md relative\">\r\n                        <h4 id=\"modal-title\" className=\"text-xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n                            Holidays on {modalDate?.toLocaleDateString('en-MY', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}\r\n                        </h4>\r\n                        <button\r\n                            onClick={closeModal}\r\n                            className=\"absolute top-3 right-3 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\r\n                            aria-label=\"Close holiday details\"\r\n                        >\r\n                            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg>\r\n                        </button>\r\n                        <div className=\"space-y-3\">\r\n                            {modalHolidays.map((holiday, index) => (\r\n                                <div key={index} className=\"p-3 rounded-md bg-gray-100 dark:bg-gray-700\">\r\n                                    <p className=\"font-semibold text-gray-900 dark:text-gray-100\">{holiday.name}</p>\r\n                                    {/* Conditionally render Type: School Holiday */}\r\n                                    {holiday.type === 'school' && (\r\n                                        <p className=\"text-sm text-gray-700 dark:text-gray-300\">Type: School Holiday</p>\r\n                                    )}\r\n                                    <p className=\"text-sm text-gray-700 dark:text-gray-300\">States: {holiday.states || 'N/A'}</p>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalendarView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}